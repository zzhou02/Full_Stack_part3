{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","search","handler","value","onChange","PersonForm","formHandler","newName","nameHandler","newNumber","numberHandler","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","person","delete","Persons","personsToShow","setPersons","setMessage","setMessageColor","map","key","name","number","onClick","window","confirm","services","catch","deletionHandler","Notification","message","color","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","persons","setNewName","setNewNumber","setSearch","showAll","setShowAll","messageColor","useEffect","initialData","filter","toLowerCase","includes","event","target","preventDefault","some","repeatedPerson","newPerson","error","console","log","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13b55fad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ search, handler }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={search} onChange={handler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({ formHandler, newName, nameHandler, newNumber, numberHandler }) => {\r\n  return (\r\n\r\n    <form onSubmit={formHandler}>\r\n      <div>\r\n        name: <input value={newName} onChange={nameHandler} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={numberHandler} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nconst deletion = person => {\r\n  return axios.delete(`${baseUrl}/${person.id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deletion }","import React from 'react';\r\nimport services from '../services.js'\r\n\r\nconst Persons = ({ personsToShow, setPersons, setMessage, setMessageColor }) => {\r\n  const deletionHandler = person => {\r\n    if (window.confirm(`delete ${person.name}?`)) {\r\n      services\r\n      .deletion(person)\r\n      .then(() => {\r\n        services.getAll().then(data => {\r\n          setPersons(data)\r\n        })\r\n      })\r\n      .catch(() => {\r\n        setMessageColor('red')\r\n        setMessage(`Information about ${person.name} has already been removed from the server`)\r\n        services.getAll().then(data => {\r\n          setPersons(data)\r\n        })\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {personsToShow.map(person =>\r\n        <div key={person.name}>\r\n          {person.name} {person.number}\r\n          <button onClick={() => deletionHandler(person)}>\r\n            delete\r\n          </button>\r\n        </div>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst Notification = ({ message, color }) => {\r\n  if (message === null){\r\n    return null\r\n  }\r\n  const style = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n  return (\r\n    <div style={style}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport services from './services.js'\r\nimport Notification from './components/Notification.js'\r\n\r\nconst App = () => {\r\n  // state hooks\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [search, setSearch] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [message, setMessage] = useState(null);\r\n  const [messageColor, setMessageColor] = useState('green');\r\n  // effect hook\r\n  useEffect(() => {\r\n    services\r\n      .getAll()\r\n      .then(initialData => setPersons(initialData))\r\n  }, [])\r\n  // event handlers\r\n  const addToPhoneBook = (event) => {\r\n    event.preventDefault()\r\n    if (persons.some(person => person.name === newName)) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\r\n        const repeatedPerson = persons.filter(person => person.name === newName)[0]\r\n        const newPerson = { ...repeatedPerson, number: newNumber }\r\n        services\r\n          .update(newPerson.id, newPerson)\r\n          .then(() => {\r\n            setMessageColor('green')\r\n            setMessage(`Updated ${newName}`)\r\n            services.getAll().then(data => { setPersons(data) })\r\n          })\r\n      }\r\n    } else {\r\n      const newEntry = { name: newName, number: newNumber }\r\n      services\r\n        .create(newEntry)\r\n        .then(() => {\r\n          setMessageColor('green')\r\n          setMessage(`Added ${newName}`)\r\n          services.getAll().then(data => { setPersons(data) })\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data);\r\n          setMessageColor('red')\r\n          setMessage(error.response.data.error)\r\n        })\r\n    }\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n    }, 3000);\r\n  }\r\n  const handleNameChange = (event) => { setNewName(event.target.value) }\r\n  const handleNumberChange = (event) => { setNewNumber(event.target.value) }\r\n  const handleSearch = (event) => {\r\n    setSearch(event.target.value)\r\n    setShowAll(event.target.value === '')\r\n  }\r\n  const personsToShow = showAll ? persons : persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} color={messageColor} />\r\n      <Filter search={search} handler={handleSearch} />\r\n      <h3>add a new</h3>\r\n      <PersonForm formHandler={addToPhoneBook} newName={newName} newNumber={newNumber}\r\n        nameHandler={handleNameChange} numberHandler={handleNumberChange} />\r\n      <h3>Numbers</h3>\r\n      <Persons personsToShow={personsToShow} setPersons={setPersons}\r\n        setMessage={setMessage} setMessageColor={setMessageColor} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}